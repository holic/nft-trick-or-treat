/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MinimalForwarderUpgradeable,
  MinimalForwarderUpgradeableInterface,
} from "../MinimalForwarderUpgradeable";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarderUpgradeable.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarderUpgradeable.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611499806100206000396000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610076578063bf5d3bdb146100a7575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610b67565b6100e4565b60405161006d919061105d565b60405180910390f35b610090600480360381019061008b9190610b90565b61012d565b60405161009e929190610e86565b60405180910390f35b3480156100b357600080fd5b506100ce60048036038101906100c99190610b90565b610306565b6040516100db9190610e6b565b60405180910390f35b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000606061013c858585610306565b61017b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017290610fdd565b60405180910390fd5b6001856080013561018c9190611112565b603560008760000160208101906101a39190610b67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906101f79190610b67565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a001906102279190611078565b8b600001602081019061023a9190610b67565b60405160200161024c93929190610df3565b6040516020818303038152906040526040516102689190610e1d565b600060405180830381858888f193505050503d80600081146102a6576040519150601f19603f3d011682016040523d82523d6000602084013e6102ab565b606091505b5091509150603f87606001356102c19190611168565b5a116102f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b8181935093505050935093915050565b60008061040f84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506104017fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906103889190610b67565b89602001602081019061039b9190610b67565b8a604001358b606001358c608001358d8060a001906103ba9190611078565b6040516103c8929190610dda565b60405180910390206040516020016103e69796959493929190610eb6565b604051602081830303815290604052805190602001206104bc565b6104d690919063ffffffff16565b905084608001356035600087600001602081019061042d9190610b67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156104b257508460000160208101906104839190610b67565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b60006104cf6104c96104fd565b8361053d565b9050919050565b60008060006104e58585610570565b915091506104f2816105f3565b819250505092915050565b60006105387f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61052b610944565b61053361094e565b610958565b905090565b60008282604051602001610552929190610e34565b60405160208183030381529060405280519060200120905092915050565b6000806041835114156105b25760008060006020860151925060408601519150606086015160001a90506105a687828585610992565b945094505050506105ec565b6040835114156105e35760008060208501519150604085015190506105d8868383610a9f565b9350935050506105ec565b60006002915091505b9250929050565b6000600481111561062d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610666577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561067157610941565b600160048111156106ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156106e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90610fbd565b60405180910390fd5b6002600481111561075f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610798577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d090610ffd565b60405180910390fd5b60036004811115610813577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600481111561084c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561088d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108849061101d565b60405180910390fd5b6004808111156108c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156108ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610940576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109379061103d565b60405180910390fd5b5b50565b6000600154905090565b6000600254905090565b60008383834630604051602001610973959493929190610f25565b6040516020818303038152906040528051906020012090509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156109cd576000600391509150610a96565b601b8560ff16141580156109e55750601c8560ff1614155b156109f7576000600491509150610a96565b600060018787878760405160008152602001604052604051610a1c9493929190610f78565b6020604051602081039080840390855afa158015610a3e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a8d57600060019250925050610a96565b80600092509250505b94509492505050565b6000806000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85169150601b8560ff1c019050610adf87828885610992565b935093505050935093915050565b600081359050610afc8161144c565b92915050565b60008083601f840112610b1457600080fd5b8235905067ffffffffffffffff811115610b2d57600080fd5b602083019150836001820283011115610b4557600080fd5b9250929050565b600060c08284031215610b5e57600080fd5b81905092915050565b600060208284031215610b7957600080fd5b6000610b8784828501610aed565b91505092915050565b600080600060408486031215610ba557600080fd5b600084013567ffffffffffffffff811115610bbf57600080fd5b610bcb86828701610b4c565b935050602084013567ffffffffffffffff811115610be857600080fd5b610bf486828701610b02565b92509250509250925092565b610c0981611199565b82525050565b610c20610c1b82611199565b61123a565b82525050565b610c2f816111ab565b82525050565b610c3e816111b7565b82525050565b610c55610c50826111b7565b61124c565b82525050565b6000610c6783856110eb565b9350610c748385846111f8565b82840190509392505050565b6000610c8b826110cf565b610c9581856110da565b9350610ca5818560208601611207565b610cae816112c6565b840191505092915050565b6000610cc4826110cf565b610cce81856110eb565b9350610cde818560208601611207565b80840191505092915050565b6000610cf76018836110f6565b9150610d02826112e4565b602082019050919050565b6000610d1a6032836110f6565b9150610d258261130d565b604082019050919050565b6000610d3d601f836110f6565b9150610d488261135c565b602082019050919050565b6000610d60600283611107565b9150610d6b82611385565b600282019050919050565b6000610d836022836110f6565b9150610d8e826113ae565b604082019050919050565b6000610da66022836110f6565b9150610db1826113fd565b604082019050919050565b610dc5816111e1565b82525050565b610dd4816111eb565b82525050565b6000610de7828486610c5b565b91508190509392505050565b6000610e00828587610c5b565b9150610e0c8284610c0f565b601482019150819050949350505050565b6000610e298284610cb9565b915081905092915050565b6000610e3f82610d53565b9150610e4b8285610c44565b602082019150610e5b8284610c44565b6020820191508190509392505050565b6000602082019050610e806000830184610c26565b92915050565b6000604082019050610e9b6000830185610c26565b8181036020830152610ead8184610c80565b90509392505050565b600060e082019050610ecb600083018a610c35565b610ed86020830189610c00565b610ee56040830188610c00565b610ef26060830187610dbc565b610eff6080830186610dbc565b610f0c60a0830185610dbc565b610f1960c0830184610c35565b98975050505050505050565b600060a082019050610f3a6000830188610c35565b610f476020830187610c35565b610f546040830186610c35565b610f616060830185610dbc565b610f6e6080830184610c00565b9695505050505050565b6000608082019050610f8d6000830187610c35565b610f9a6020830186610dcb565b610fa76040830185610c35565b610fb46060830184610c35565b95945050505050565b60006020820190508181036000830152610fd681610cea565b9050919050565b60006020820190508181036000830152610ff681610d0d565b9050919050565b6000602082019050818103600083015261101681610d30565b9050919050565b6000602082019050818103600083015261103681610d76565b9050919050565b6000602082019050818103600083015261105681610d99565b9050919050565b60006020820190506110726000830184610dbc565b92915050565b6000808335600160200384360303811261109157600080fd5b80840192508235915067ffffffffffffffff8211156110af57600080fd5b6020830192506001820236038313156110c757600080fd5b509250929050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061111d826111e1565b9150611128836111e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561115d5761115c611268565b5b828201905092915050565b6000611173826111e1565b915061117e836111e1565b92508261118e5761118d611297565b5b828204905092915050565b60006111a4826111c1565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561122557808201518184015260208101905061120a565b83811115611234576000848401525b50505050565b600061124582611256565b9050919050565b6000819050919050565b6000611261826112d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b7f4d696e696d616c466f727761726465723a207369676e617475726520646f657360008201527f206e6f74206d6174636820726571756573740000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b61145581611199565b811461146057600080fd5b5056fea2646970667358221220cf9335b8d6026cd2cb514f6d09c516cc3ef4e00645b7af61a6501ecd33f6be7b64736f6c63430008040033";

export class MinimalForwarderUpgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinimalForwarderUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<MinimalForwarderUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinimalForwarderUpgradeable {
    return super.attach(address) as MinimalForwarderUpgradeable;
  }
  connect(signer: Signer): MinimalForwarderUpgradeable__factory {
    return super.connect(signer) as MinimalForwarderUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderUpgradeableInterface {
    return new utils.Interface(_abi) as MinimalForwarderUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalForwarderUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MinimalForwarderUpgradeable;
  }
}
